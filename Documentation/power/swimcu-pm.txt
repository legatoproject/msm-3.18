Sierra Wireless MCU Ultra Low Power Management
	(C) 2016 Sierra Wireless, GPL

V1.02

The Sierra Wireless WPx5 product series are equipped with an
on-board MCU whose prime function is to allow the system to
operate in a very low power mode (ultra low power mode or ULPM).
In this mode, power is removed from the main MDM chip, while the
MCU runs at the lowest possible current consumption monitoring
for configured boot conditions. When triggered, the MCU then
restores power to boot the MDM. The MCU provides GPIO and ADC
(future) services in support of boot options.

The MCU kernel driver provides a sysfs interface to query and
configure the MCU I/O and boot conditions from ULPM.


1. GPIO
===============

The MCU supports 8 external pins that may be configured as GPIO.
These are exposed through the standard gpiolib interface
(/sys/class/gpio) as GPIO U1-U8. They may be exported (default
is input, no pull), pull configured (DOWN, UP), or direction set
as output with value setting (0, 1).
IRQ support is not currently available.
Note that only U3 and U5 are currently available as boot
source options to wake from ULPM (described below), although any
of these 8 if configured (exported) will persist while in ULPM
(at the expense of additional current consumption depending on
configuration).
For more details on this interface, see:
Documentation/gpio/sysfs.txt


2. ADC
===============

The MCU supports 2 external pins that may be configured as ADC
inputs. These correspond to ADC2 and ADC3 of the WPx5. They are
exposed through the standard hwmon interface (/sys/class/hwmon)
at hwmon1. Each ADC may be read via in0_mv and in1_mv. The value
is returned in milliVolts (range: 0 - 1800mV).
The interface is loosely based on that described in:
Documentation/hwmon/sysfs-interface


3. ULPM
===============

Configuration and querying of boot sources to wake from ULPM are
done via a custom interface /sys/module/swimcu_pm/boot_source.
Note that if this sysfs node is not present, this indicates that
the MCU failed to initialize when the kernel started up and hence
the feature is not available.

Available boot sources are:
	/sys/module/swimcu_pm/boot_source/timer/timeout
		(value in seconds)
	/sys/module/swimcu_pm/boot_source/gpioU3/edge
	/sys/module/swimcu_pm/boot_source/gpioU5/edge
		(values: off, low, high, rising, falling, both)

Once boot sources are configured, ULPM may be enabled by writing 1 to:
	/sys/module/swimcu_pm/boot_source/enable
Alternatively, if no boot sources are desired (software power down),
then 2 is written to this location. In this mode only the power switch
may be used to return from ULPM mode.

If a boot source is triggered, either before entering or upon
returning from ULPM, the triggered status is set to 1 for that
boot source:
	/sys/module/swimcu_pm/boot_source/timer/triggered
	/sys/module/swimcu_pm/boot_source/gpioU3/triggered
	/sys/module/swimcu_pm/boot_source/gpioU5/triggered

In the event that a boot source triggers before entering ULPM (or
no boot source is configured), the write to enable will fail. The
boot source will need to be reenabled in this case. Note that the
timer is not started until ULPM is entered and thus will not trigger
before.


4. MCU Firmware Version
==========================

The current MCU firmware version may be queried from:
	/sys/module/swimcu_pm/boot_source/firmware/version
As noted with boot_source, if this sysfs node is not present, that
indicates that the MCU failed to initialize when the kernel booted
up. This could be, for example, because firmware has not been loaded
on the MCU. If communication with the MCU is lost after boot up, a
version of 000.000 is returned.


5. Debug
===============

a) Logging
Kernel logging for specific MCU driver functions may be
controlled by setting bits in:
/sys/module/swimcu_pm/parameters/debug_mask
The log bits are defined as follows:
	Bit	Function
	0	Initialization
	1	Event
	2	Protocol (quite verbose)
	3	Power Management
	4	GPIO
	5	ADC
	6	Firmware
	7	Other

By default on power up, only bit 0 is set. Subsequent values set
are not persistent. The interface accepts values in decimal.

b) Reset
If the MCU resets, the status may be queried from:
/sys/module/swimcu_pm/parameters/reset_source
Commonly observed reset source values are:
1024: bit 10 - Software reset, e.g. after a MCU firmware update
130: bit 7,1 - Power on reset, low voltage detect, respectively
               e.g. on initial power up of the module
This value is cleared on soft reset of the module (MCU does not
reset) or by writing via sysfs.

c) Fault
Resets and other error conditions are recorded in the fault_mask
and fault_count. Each fault type is assigned a bit in the mask
that is OR'ed in upon the fault occurrence. The fault_count is
incremented with each occurrence. If the maximum fault threshold
is reached, the automatic fault recovery mechanism is disabled.
This may be reset by writing 0 to the fault_mask.
The fault bits are defined as follows:
	Bit	Function
	0	TX timeout	(max TX retries exceeded)
	1	TX NAK		(NAK received on TX message)
	2	RX timeout	(max RX wait time exceeded)
	3	RX CRC		(CRC failed on RX message)
	8	Reset		(MCU reset detected,
					may be normal operation)
	9	Event overflow	(max concurrent events exceeded,
					event handling disabled)

